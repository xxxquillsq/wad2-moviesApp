# Node docker image with Cypress and Chrome pre-installed
image: cypress/browsers:node12.0.0-chrome73

# Pipeline
stages:
  - install
  - build
  - run after the build before test 
  - test
  

# to cache both npm modules and Cypress binary we use environment variables
# to point at the folders we can list as paths in "cache" job settings

variables:
   npm_config_cache: "$CI_PROJECT_DIR/.npm"
   CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
   CYPRESS_RECORD_KEY: "1dd517ab-81fb-4a06-98b6-4f8fbd19f4cd"
   CYPRESS_TMDB_KEY: "ac30d257ab5fd18bd93513cf9e6e27b9"
   REACT_APP_TMDB_KEY: "ac30d257ab5fd18bd93513cf9e6e27b9"


cache:
   key:
     files:
        - package.json
   paths:
      - .npm
      - cache/Cypress
      - node_modules
# END NEW

# Jobs 

install_dependencies:
  stage: install
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/

bundle_app:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - build/

build_jobX:
  stage: build
  only:
    - demobranch
  script:
    - echo "build job X on demoBranch works"

exercise_job:
  stage: run after the build before test 
  only:
    - master
  script:
    - echo "finish exercise_job"


e2etest:    
    stage: test
    before_script:
      - npm install -g http-server
      - npm install cypress
    script:
       # start the server in the background
      - npm run start:ci

test_jobX:
  stage: test
  only:
    - master
    - demobranch2
  script:
    - echo "test job X"